---
# This workflow runs when the master branch changes. A new Docker image will be built
# for both the Frontend and the Backend, and they will be pushed to Docker Hub
# with the 'staging' tag.

# Then an Ansible playbokk will be executed on the staging server
# to update the service with these new images.

name: CD

on:
  pull_request:
    branches:
      - master
    types:
      - closed

# Steve
jobs:
  build-and-push-server-image:
    # CD Conditions
    # Only run when a pull request is merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push server image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:server"
          push: true
          tags: donbattery/bnj-backend:staging

  build-and-push-client-image:
    # CD Conditions
    # Only run when a pull request is merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push client image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:client"
          push: true
          tags: donbattery/bnj-frontend:staging

  deploy-to-staging:
    needs: [build-and-push-server-image, build-and-push-client-image]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: devops/ansible

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies Including Ansible
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write SSH file
        env:
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > id_rsa
          chmod 600 id_rsa

      - name: Write Inventory file
        env:
          INVENTORY: ${{ secrets.STAGING_INVENTORY }}
        run: echo "$INVENTORY" > inventory

      - name: Deploy to Staging with Ansible
        run: 'ansible-playbook -v -i inventory --extra-vars "role_action=deploy app_environment=staging" manage-app-server.yml'
