---
# This workflow runs when the master branch changes. A new Docker image will be built
# for both the Frontend and the Backend, and they will be pushed to Docker Hub
# with the 'staging' tag.

# Then an Ansible playbokk will be executed on the staging server
# to update the service with these new images.

name: CD

# CD Conditions
# on:
#   pull_request:
#     branches:
#       - master
#     types:
#       - closed

# CI conditions
on:
  push:
    branches-ignore:
      - master

jobs:
  deploy-to-staging:
    # CD Conditions
    # Only run when a pull request is merged
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: devops/ansible

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies Including Ansible
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write SSH file
        env:
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > id_rsa
          chmod 600 id_rsa

      - name: Write known_hosts file
        env:
          KNOWN_HOSTS: ${{ secrets.STAGING_KNOWN_HOSTS }}
        run: |
          echo "$KNOWN_HOSTS" > known_hosts
          chmod 600 known_hosts

      - name: Write Inventory file
        env:
          INVENTORY: ${{ secrets.STAGING_INVENTORY }}
        run: echo "$INVENTORY" > inventory

      # ansible --key-file id_rsa -i inventory all -m ping -vvv
      - name: Deploy to Staging with Ansible
        run: |
          ls -a
          ansible-playbook -vvv -i inventory deploy-staging.yml
